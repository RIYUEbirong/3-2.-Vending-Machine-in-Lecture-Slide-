`timescale 1ns/1ns
module tb_LAB32();




reg sys_clk;
 reg sys_rst_n;
 reg money_one;
 reg money_half;
 reg random_data_gen;

 
 wire cola;

 
 
 
 initial begin
 sys_clk = 1'b1;
 sys_rst_n <= 1'b0;
 #20
 sys_rst_n <= 1'b1;
 end

 
 always #10 sys_clk = ~sys_clk;


 always@(posedge sys_clk or negedge sys_rst_n)
 if(sys_rst_n == 1'b0)
 random_data_gen <= 1'b0;
 else
 random_data_gen <= {$random} % 2;


 always@(posedge sys_clk or negedge sys_rst_n)
 if(sys_rst_n == 1'b0)
 money_one <= 1'b0;
 else
 money_one <= random_data_gen;

 
 always@(posedge sys_clk or negedge sys_rst_n)
 if(sys_rst_n == 1'b0)
 money_half <= 1'b0;
 else
 
 money_half <= ~random_data_gen;

 
 
 wire [3:0] state = LAB32_inst.state;
 wire [1:0] money = LAB32_inst.money;

 initial begin
 $timeformat(-9, 0, "ns", 6);
 $monitor("@time %t: money_one=%b money_half=%b money=%b state=%b cola=%b", 
 $time, money_one, money_half, money, state, cola);
 end

 
 
 
 LAB32 LAB32_inst(
 .sys_clk (sys_clk ),
 .sys_rst_n (sys_rst_n ),
 .money_one (money_one ),
 .money_half (money_half ),

 .cola (cola )
 );

 endmodule
