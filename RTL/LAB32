module LAB32
(
input wire sys_clk ,
input wire sys_rst_n ,
input wire money_one ,
input wire money_half ,

output reg cola 

);




parameter IDLE = 4'b0001;
parameter HALF = 4'b0010;
parameter ONE = 4'b0100;
parameter ONE_HALF = 4'b1000;

reg [3:0] state;

wire [1:0] money;



assign money = {money_one, money_half};

always@(posedge sys_clk or negedge sys_rst_n)
if(sys_rst_n == 1'b0)
state <= IDLE;
else case(state)
IDLE : if(money == 2'b01)
state <= HALF;
else if(money == 2'b10)
state <= ONE;
else
state <= IDLE;
HALF : if(money == 2'b01)
state <= ONE;
else if(money == 2'b10)
state <= ONE_HALF;
else
state <= HALF;
ONE : if(money == 2'b01)
state <= ONE_HALF;
else if(money == 2'b10)
state <= IDLE;
else
state <= ONE;
ONE_HALF : if((money == 2'b01) || (money == 2'b10))
state <= IDLE;
else
state <= ONE_HALF;

default : state <= IDLE;
endcase

always@(posedge sys_clk or negedge sys_rst_n)
if(sys_rst_n == 1'b0)
cola <= 1'b0;
else if((state == ONE_HALF && money == 2'b01) || (state == ONE_HALF &&
money == 2'b10) || (state == ONE && money == 2'b10))
cola <= 1'b1;
else
cola <= 1'b0;


endmodule
